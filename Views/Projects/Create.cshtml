@model NBD6.Models.Project

@{
    ViewData["Title"] = "Create";
}

<h1>Project Create</h1>

<p>All fields marked with * are required to create a Project.</p>

<form asp-action="Create">
    <div class="row">
        <div class="col-md-6">
            <h4>Project</h4>
            <hr />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProjectName" class="control-label">Project Name<span class="text-danger">*</span></label>
                <input asp-for="ProjectName" class="form-control" placeholder="Project Name" />
                <span asp-validation-for="ProjectName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectStartDate" class="control-label">Start Date<span class="text-danger">*</span></label>
                <input asp-for="ProjectStartDate" class="form-control" />
                <span asp-validation-for="ProjectStartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectEndDate" class="control-label">End Date<span class="text-danger">*</span></label>
                <input asp-for="ProjectEndDate" class="form-control" />
                <span asp-validation-for="ProjectEndDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectSite" class="control-label">Project Site<span class="text-danger">*</span></label>
                <input asp-for="ProjectSite" class="form-control" placeholder="Project Site" />
                <span asp-validation-for="ProjectSite" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BidAmount" class="control-label">Bid Amount<span class="text-danger">*</span></label>
                <input asp-for="BidAmount" class="form-control" placeholder="Bid Amount" />
                <span asp-validation-for="BidAmount" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <h4>Address</h4>
            <hr />
            @* Address Fields *@
            <div class="form-group">
                <label asp-for="Address.Street" class="control-label">Street<span class="text-danger">*</span></label>
                <input asp-for="Address.Street" class="form-control" placeholder="123 Example St (Format: Number, Street Name)" />
                <span asp-validation-for="Address.Street" class="text-danger"></span>
                <small class="form-text text-muted">Please enter the street address in the format: Number Street Name</small>
            </div>
            <div class="form-group">
                <label asp-for="Address.Province" class="control-label">Province<span class="text-danger">*</span></label>
                <select asp-for="Address.Province" asp-items="ViewBag.Provinces" class="form-control">
                </select>
                <span asp-validation-for="Address.Province" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address.Postal" class="control-label">Postal<span class="text-danger">*</span></label>
                <input asp-for="Address.Postal" class="form-control" placeholder="A1A 1A1 (Format: A1A 1A1)" />
                <span asp-validation-for="Address.Postal" class="text-danger"></span>
                <small class="form-text text-muted">Please enter the postal code in the format: A1A 1A1</small>
            </div>
            <div>
                <label asp-for="Address.Country" class="control-label">Country<span class="text-danger">*</span></label>
                <select asp-for="Address.Country" asp-items="ViewBag.Country" class="form-control">
                </select>
                <span asp-validation-for="Address.Country" class="text-danger"></span>
            </div>
        </div>
        <div class="col-md-6">
            <h4>Client</h4>
            <hr />
            <div class="form-group">
                <label asp-for="Client" class="control-label">Client<span class="text-danger">*</span></label>
                <select id="ClientSummary" asp-for="ClientID" class="form-control" asp-items="ViewBag.ClientID">
                    <option value="">Select a Client</option>
                    @if (TempData["NewClientID"] != null)
                    {
                        <option value="@TempData["NewClientID"]" selected>@TempData["NewClientSummary"]</option>
                    }
                </select>
                <a class="nav-link text-dark" asp-area="" asp-controller="Clients" asp-action="Create">Create a new Client</a>
            </div>
        </div>
    </div>

    <div class="form-group col-md-12">
        <input type="submit" value="Create" class="btn btn-primary" />
        <button type="button" id="autofillProjectData" class="btn btn-info">Autofill Project Data</button>

    </div>

</form>

<div class="col-md-1">
    <div>
        <a class="nav-link text-dark" href="javascript:history.back()">Go Back</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/css/select2.min.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/select2@4.0.13/dist/js/select2.min.js">
    </script>
    <script type="text/javascript">
        $(function () {
            $("#ClientSummary").select2();
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Function to load saved data from sessionStorage
            function loadData() {
                document.querySelectorAll("#ProjectName, #ProjectStartDate, #ProjectEndDate, #ProjectSite, #ClientSummary, #BidAmount").forEach(function (input) {
                    const savedValue = sessionStorage.getItem(input.id);
                    if (savedValue) {
                        input.value = savedValue;
                    }
                });
            }

            document.querySelectorAll("#ProjectName, #ProjectStartDate, #ProjectEndDate, #ProjectSite, #ClientSummary, #BidAmount").forEach(function (input) {
                input.addEventListener("input", function () {
                    sessionStorage.setItem(this.id, this.value);
                });
            });

            loadData();

            document.querySelector("form").addEventListener("submit", function () {
                ["ProjectName", "ProjectStartDate", "ProjectEndDate", "ProjectSite", "ClientSummary", "BidAmount"].forEach(function (fieldId) {
                    sessionStorage.removeItem(fieldId);
                });
            });
        });

        $(document).ready(function () {
            // Initialize select2 for dropdowns
            $("#Address_Province").select2();
            $("#ClientSummary").select2();

            $('#autofillProjectData').click(function () {
                // Project names for variety
                const projectNames = [
                    "Nexus Redevelopment Initiative",
                    "Quantum Computing Research",
                    "Green Energy Solutions",
                    "Urban Renewal Outreach",
                    "Digital Transformation Project",
                    "NextGen Telecommunications Upgrade",
                    "Eco Friendly Housing Development",
                    "Cybersecurity Enhancement Program",
                    "Machine Learning Deployment",
                    "Smart City Infrastructure Upgrade"
                ];
                const projectName = projectNames[Math.floor(Math.random() * projectNames.length)];

                // Generating dynamic start and end dates
                const startDate = new Date();
                startDate.setDate(startDate.getDate() + Math.floor(Math.random() * 10) + 1);
                const endDate = new Date(startDate);
                endDate.setDate(startDate.getDate() + Math.floor(Math.random() * 90) + 30);

                // Formatting dates to YYYY-MM-DD
                const projectStartDate = startDate.toISOString().split('T')[0];
                const projectEndDate = endDate.toISOString().split('T')[0];

                // Filling in the project fields
                $('#ProjectName').val(projectName);
                $('#ProjectStartDate').val(projectStartDate);
                $('#ProjectEndDate').val(projectEndDate);
                $('#ProjectSite').val("Project Site " + Math.floor(Math.random() * 100));


                // Address fields
                if ($('#Address_Country option').length > 1) {
                    $('#Address_Country').val($('#Address_Country option').eq(1).val()).trigger('change');
                }

                // Assuming your provinces are dynamically populated and you have a reasonable number of options:
                if ($('#Address_Province option').length > 1) {
                    const randomProvinceIndex = Math.floor(Math.random() * ($('#Address_Province option').length - 1)) + 1;
                    $('#Address_Province').val($('#Address_Province option').eq(randomProvinceIndex).val()).trigger('change');
                }

                // Generating a more realistic postal code and street address
                const postalCode = "A" + Math.floor(Math.random() * 9) + "B " + Math.floor(Math.random() * 9) + "C" + Math.floor(Math.random() * 9);
                $('#Address_Postal').val(postalCode);
                $('#Address_Street').val(Math.floor(Math.random() * 1000) + " Main Street");

                // Selecting a client - adjust as needed
                if ($('#ClientSummary option').length > 1) {
                    $('#ClientSummary').val($('#ClientSummary option:eq(1)').val()).trigger('change');
                }

                // Autofill BidAmount with a random number between 800 and 5000 with 2 decimal places
                const bidAmount = (Math.random() * (5000 - 800) + 800).toFixed(2);
                $('#BidAmount').val(bidAmount);
            });
        });
    </script>
}