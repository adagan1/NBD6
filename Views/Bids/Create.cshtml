@model NBD6.Models.Bid

@{
    ViewData["Title"] = "Create";
}

<h1>Bid Create</h1>

<p>All fields marked with * are required to create a bid.</p>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="col-md-6">
            <!-- Bid Fields -->
            <h4>Bid</h4>
            <hr />
            <div class="form-group">
                <label asp-for="BidName" class="control-label">Bid Name<span class="text-danger">*</span></label>
                <input asp-for="BidName" class="form-control" placeholder="Enter bid name" required />
                <span asp-validation-for="BidName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BidStart" class="control-label">Bid Start Date<span class="text-danger">*</span></label>
                <input asp-for="BidStart" class="form-control" type="date" required />
                <span asp-validation-for="BidStart" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BidEnd" class="control-label">Bid End Date<span class="text-danger">*</span></label>
                <input asp-for="BidEnd" class="form-control" type="date" required />
                <span asp-validation-for="BidEnd" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectID" class="control-label">Project<span class="text-danger">*</span></label>
                <select asp-for="ProjectID" class="form-control" id="ProjectID" asp-items="ViewBag.ProjectID">
                    <option value="">Select a Project</option>
                    @if (TempData["NewProjectID"] != null)
                    {
                        <option value="@TempData["NewProjectID"]" selected>@TempData["NewProjectSummary"]</option>
                    }
                </select>
                <a class="nav-link text-dark" asp-area="" asp-controller="Projects" asp-action="Create">Create a new Project</a>
            </div>
        </div>

        <!-- Labour Fields -->
        <div class="col-md-6">
            <h4>Labour</h4>
            <hr />
            <div id="labours-container">
                <div class="labour-group">
                    <div class="form-group">
                        <label class="control-label">Labour Hours<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="LabourHours" placeholder="Please enter the number of hours worked" required />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Description<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="LabourDescription" placeholder="Enter the type of labour conducted" required />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Labour Price<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="LabourPrice" placeholder="ex: 100" required />
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-success" onclick="addLabour()">Add Another Labour</button>
        </div>

        <!-- Material Fields -->
        <div class="col-md-6">
            <h4>Materials</h4>
            <hr />
            <div id="materials-container">
                <div class="material-group">
                    <div class="form-group">
                        <label class="control-label">Material Type<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="MaterialType" placeholder="ex: soil, bark, roses" required />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Quantity<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="MaterialQuantity" placeholder="ex: 10" required />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Description<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="MaterialDescription" placeholder="Enter the type of material" required />
                    </div>
                    <div class="form-group">
                        <label class="control-label">Materials Size<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="MaterialSize" placeholder="ex: 10 kg" required />
                        <small class="form-text text-muted">Please enter a unit of measurement after a digit(cm, m, l, g, kg)</small>
                    </div>
                    <div class="form-group">
                        <label class="control-label">Price<span class="text-danger">*</span></label>
                        <input type="text" class="form-control" name="MaterialPrice" placeholder="Material price" required />
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-success" onclick="addMaterial()">Add Another Material</button>
        </div>

        <div class="col-md-6">
            <h4>Staff</h4>
            <hr />
            <div class="form-group">
                <label asp-for="Staff" class="control-label">Staff<span class="text-danger">*</span></label>
                <select asp-for="Staff" class="form-control" id="StaffID" asp-items="ViewBag.StaffID" name="StaffIDList">
                    <option value="">Select Staff</option>
                </select>
            </div>
        </div>

    <!-- Autofill button -->
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
        <button type="button" class="btn btn-secondary" onclick="autofill()">Autofill Form</button>
        <span id="autofill-message" class="text-success"></span>
    </div>
</form>

<div class="col-md-1">
    <div>
        <a class="nav-link text-dark" href="javascript:history.back()">Go Back</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    // Function to add another set of labour fields
    function addLabour() {
        var laboursContainer = document.getElementById("labours-container");
        var newLabourGroup = document.createElement("div");
        newLabourGroup.classList.add("labour-group");
        newLabourGroup.innerHTML = `
            <div class="form-group">
                <label class="control-label">Labour Hours<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="LabourHours" placeholder="Please enter the number of hours worked" required />
            </div>
            <div class="form-group">
                <label class="control-label">Description<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="LabourDescription" placeholder="Enter the type of labour conducted" required />
            </div>
            <div class="form-group">
                <label class="control-label">Labour Price<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="LabourPrice" placeholder="ex: 100" required />
            </div>
        `;
        laboursContainer.appendChild(newLabourGroup);
    }

    // Function to add another set of material fields
    function addMaterial() {
        var materialsContainer = document.getElementById("materials-container");
        var newMaterialGroup = document.createElement("div");
        newMaterialGroup.classList.add("material-group");
        newMaterialGroup.innerHTML = `
            <div class="form-group">
                <label class="control-label">Material Type<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="MaterialType" placeholder="ex: soil, bark, roses" required />
            </div>
            <div class="form-group">
                <label class="control-label">Quantity<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="MaterialQuantity" placeholder="ex: 10" required />
            </div>
            <div class="form-group">
                <label class="control-label">Description<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="MaterialDescription" placeholder="Enter the type of material" required />
            </div>
            <div class="form-group">
                <label class="control-label">Materials Size<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="MaterialSize" placeholder="ex: 10 kg" required />
                <small class="form-text text-muted">Please enter a unit of measurement after a digit(cm, m, l, g, kg)</small>
            </div>
            <div class="form-group">
                <label class="control-label">Price<span class="text-danger">*</span></label>
                <input type="text" class="form-control" name="MaterialPrice" placeholder="Material price" required />
            </div>
        `;
        materialsContainer.appendChild(newMaterialGroup);
    }

    // Function to get the index for the next material
    function getNextMaterialIndex() {
        var materialsContainer = document.querySelectorAll('.material-group');
        return materialsContainer.length;
    }

    // Function to get the index for the next labour
    function getNextLabourIndex() {
        var laboursContainer = document.querySelectorAll('.labour-group');
        return laboursContainer.length;
    }


    function autofill() {
        // Generate random data for BidStart and BidEnd
        var startDate = new Date(Date.now() + Math.random() * (1000 * 60 * 60 * 24 * 30)); // Random date within next 30 days
        var endDate = new Date(startDate.getTime() + Math.random() * (1000 * 60 * 60 * 24 * 30)); // Random date within 30 days from start
        document.getElementById("BidStart").value = startDate.toISOString().split('T')[0];
        document.getElementById("BidEnd").value = endDate.toISOString().split('T')[0];

        // Generate random data for ProjectID (assuming it's a select dropdown)
        var projectOptions = document.getElementById("ProjectID").options;
        var randomProjectIndex = Math.floor(Math.random() * (projectOptions.length - 1)) + 1; // Exclude the first option (Select a Project)
        document.getElementById("ProjectID").selectedIndex = randomProjectIndex;

        // Generate random data for Labour fields
        document.getElementById("LabourHours").value = Math.floor(Math.random() * 40) + 1; // Random value between 1 and 40
        document.getElementById("LabourPrice").value = (Math.random() * 100).toFixed(2); // Random value between 0 and 100, rounded to 2 decimal places

        // Generate random data for Material fields
        document.getElementById("MaterialQuantity").value = Math.floor(Math.random() * 1000) + 1; // Random value between 1 and 1000
        var materialSize = (Math.random() * 100).toFixed(2); // Random value between 0 and 100, rounded to 2 decimal places
        var sizeUnit = Math.random() < 0.5 ? 'kg' : 'g'; // Randomly choose between kg and g
        document.getElementById("MaterialSize").value = materialSize + ' ' + sizeUnit; // Concatenate size with unit
        document.getElementById("MaterialPrice").value = (Math.random() * 100).toFixed(2); // Random value between 0 and 100, rounded to 2 decimal places

        // Generate random strings for BidName, MaterialType, MaterialDescription, and LabourDescription
        document.getElementById("BidName").value = generateRandomBidName();
        document.getElementById("MaterialType").value = generateRandomMaterialType();
        document.getElementById("MaterialDescription").value = generateRandomMaterialDescription();
        document.getElementById("LabourDescription").value = generateRandomLabourDescription();
    }

    // Function to generate random string of given length
    function generateRandomString(length) {
        var result = '';
        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        var charactersLength = characters.length;
        for (var i = 0; i < length; i++) {
            result += characters.charAt(Math.floor(Math.random() * charactersLength));
        }
        return result;
    }

    // Function to generate random bid name
    function generateRandomBidName() {
        var prefixes = ['Construction of', 'Renovation of', 'Installation of', 'Repair of', 'Maintenance of', 'Design of', 'Development of', 'Remodeling of', 'Upgrade of', 'Expansion of'];
        var suffixes = ['Building', 'Bridge', 'Road', 'Pipeline', 'Demolition', 'Foundation', 'Expansion', 'Upgrade', 'Refurbishment', 'Infrastructure', 'Facility', 'System', 'Project', 'Structure'];
        return prefixes[Math.floor(Math.random() * prefixes.length)] + ' ' + suffixes[Math.floor(Math.random() * suffixes.length)];
    }



    // Function to generate random material type
    function generateRandomMaterialType() {
        var types = ['Concrete', 'Steel', 'Wood', 'Plastic', 'Glass', 'Aluminum', 'Copper'];
        return types[Math.floor(Math.random() * types.length)];
    }

    // Function to generate random material description
    function generateRandomMaterialDescription() {
        var descriptions = ['High quality', 'Durable', 'Eco friendly', 'Lightweight', 'Corrosion resistant', 'Fire resistant', 'Insulating'];
        return descriptions[Math.floor(Math.random() * descriptions.length)] + ' services';
    }

    // Function to generate random labour description
    function generateRandomLabourDescription() {
        var tasks = ['Excavation', 'Welding', 'Carpentry', 'Painting', 'Plumbing', 'Electrical wiring', 'Bricklaying'];
        return tasks[Math.floor(Math.random() * tasks.length)] + ' services';
    }
</script>