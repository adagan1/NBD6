@model NBD6.Models.Bid

@{
    ViewData["Title"] = "Create";
}

<h1>Bid Create</h1>

<p>All fields marked with * are required to create a bid.</p>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="col-md-6">
            <!-- Bid Name and Project Fields -->
            <h4>Bid</h4>
            <hr />
            <div class="form-group">
                <label asp-for="BidName" class="control-label">Bid Name<span class="text-danger">*</span></label>
                <input asp-for="BidName" class="form-control" placeholder="Enter bid name" required />
                <span asp-validation-for="BidName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProjectID" class="control-label">Project<span class="text-danger">*</span></label>
                <select asp-for="ProjectID" class="form-control" asp-items="ViewBag.ProjectID">
                    <option value="">Select a Project</option>
                    @if (TempData["NewProjectID"] != null)
                    {
                        <option value="@TempData["NewProjectID"]" selected>@TempData["NewProjectSummary"]</option>
                    }
                </select>
                <a class="nav-link text-dark" asp-area="" asp-controller="Projects" asp-action="Create">Create a new Project</a>
            </div>
        </div>

        <div class="col-md-6">
            <h4 style="visibility: hidden;">Bid</h4>
            <div class="form-group" style="margin-top: 32px;">
                <!-- Adjust the margin-top to align with Bid Name field -->
                <label asp-for="BidStart" class="control-label">Bid Start Date<span class="text-danger">*</span></label>
                <input asp-for="BidStart" class="form-control" type="date" required />
                <span asp-validation-for="BidStart" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BidEnd" class="control-label">Bid End Date<span class="text-danger">*</span></label>
                <input asp-for="BidEnd" class="form-control" type="date" required />
                <span asp-validation-for="BidEnd" the="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <!-- Labour Fields Table -->
        <div id="labour-fields">
            <h4>Labour</h4>
            <hr />
            <table class="table">
                <thead>
                    <tr>
                        <th>Labour Hours<span class="text-danger">*</span></th>
                        <th>Labour Description<span class="text-danger">*</span></th>
                        <th>Labour Price<span class="text-danger">*</span></th>
                    </tr>
                </thead>
                <tbody class="labour-group">
                    <tr>
                        <td>
                            <input type="text" class="form-control" name="Labours[0].LabourHours" placeholder="Hours worked" required />
                        </td>
                        <!-- Labour Description Dropdown -->
                        <td>
                            <select class="form-control" name="labours[0].LabourDescription" required>
                                <option value="">Select Labour Description</option>
                                @foreach (var labourDescription in ViewBag.LabourDescriptions)
                                {
                                    <option value="@labourDescription">@labourDescription</option>
                                }
                            </select>
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Labours[0].LabourPrice" placeholder="Price" required />
                        </td>
                    </tr>
                    <!-- Additional labour rows can be dynamically added here -->
                </tbody>
            </table>
            <button type="button" class="btn btn-success" onclick="addLabour()">Add Another Labour</button>
        </div>

        <!-- Spacer between Labour and Material sections -->
        <div style="height: 20px;"></div> <!-- Optional spacing for visual separation -->
        <!-- Material Fields Table -->
        <div id="material-fields">
            <h4>Material</h4>
            <hr />
            <table class="table">
                <thead>
                    <tr>
                        <th>Material Type<span class="text-danger">*</span></th>
                        <th>Material Quantity<span class="text-danger">*</span></th>
                        <th>Material Description<span class="text-danger">*</span></th>
                        <th>Material Size<span class="text-danger">*</span></th>
                        <th>Material Price<span class="text-danger">*</span></th>
                    </tr>
                </thead>
                <tbody class="material-group">
                    <tr>
                        <!-- Material Type Dropdown -->
                        <td>
                            <select class="form-control" name="materials[0].MaterialType" required>
                                <option value="">Select Material Type</option>
                                @foreach (var materialType in ViewBag.MaterialTypes)
                                {
                                    <option value="@materialType.Value">@materialType.Text</option>
                                }
                            </select>
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[0].MaterialQuantity" placeholder="Quantity" required />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[0].MaterialDescription" placeholder="Description" required />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[0].MaterialSize" placeholder="Size" required />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[0].MaterialPrice" placeholder="Price" required />
                        </td>
                    </tr>
                    <!-- Additional material rows can be dynamically added here -->
                </tbody>
            </table>
            <button type="button" class="btn btn-success" onclick="addMaterial()">Add Another Material</button>
        </div>
    </div>



    <div class="col-md-6">
        <h4>Staff</h4>
        <hr />
        <div class="row">
            <div class="col-md-9">
                <div id="staffContainer">
                    <div class="staffFields">
                        <label asp-for="Staff" class="control-label">Staff<span class="text-danger">*</span></label>
                        <select asp-for="Staff" class="form-control" asp-items="ViewBag.StaffID" name="StaffIDList">
                            <option value="">Select Staff</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <button type="button" id="addStaffBtn" class="btn btn-primary" style="margin-top: 20px; padding: 6px 12px; font-size: 14px; line-height: 1.5;">Add More Staff</button>
            </div>
        </div>
    </div>


    <!-- Autofill button -->
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-success" style="margin-top: 10px;" />
        <button type="button" class="btn btn-info" style="margin-top: 10px;" onclick="autofill()">Autofill Form</button>
        <span id="autofill-message" class="text-success"></span>
    </div>
</form>

<div class="col-md-1">
    <div>
        <a class="nav-link text-dark" href="javascript:history.back()">Go Back</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <!-- Only include the Select2 CSS and JS once, and use jQuery 3.6.0 as it's more recent -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

        <script>
            $(document).ready(function () {
                $('#ProjectID').select2({
                    placeholder: "Select a Project",
                    allowClear: true
                });

                // Correct the selector to match the generated ID for the staff dropdown
                $('[name="StaffIDList"]').select2({
                    placeholder: "Select Staff",
                    allowClear: true
                });
            });
        </script>
    }
}
<script>
    function autofill() {
        // Autofill bid fields
        document.querySelector('input[name="BidName"]').value = "Example Bid";
        document.querySelector('input[name="BidStart"]').value = "2024-03-13"; // Example date
        document.querySelector('input[name="BidEnd"]').value = "2024-03-20"; // Example date

        // Autofill material fields
        document.querySelectorAll('input[name^="Materials"]').forEach(function (input) {
            if (input.name.includes("MaterialType")) {
                input.value = "Autofilled Material Type";
            } else if (input.name.includes("MaterialQuantity")) {
                input.value = "10"; // Example quantity
            } else if (input.name.includes("MaterialDescription")) {
                input.value = "Autofilled Material Description";
            } else if (input.name.includes("MaterialSize")) {
                input.value = "30 kg"; // Example size
            } else if (input.name.includes("MaterialPrice")) {
                input.value = "50"; // Example price
            }
        });

        // Autofill labour fields
        document.querySelectorAll('input[name^="Labours"]').forEach(function (input) {
            if (input.name.includes("LabourHours")) {
                input.value = "8"; // Example hours worked
            } else if (input.name.includes("LabourDescription")) {
                input.value = "Autofilled Labour Description";
            } else if (input.name.includes("LabourPrice")) {
                input.value = "20"; // Example price
            }
        });

        // Autofill staff fields
        document.querySelectorAll('select[name^="Staff"]').forEach(function (select) {
            var options = select.querySelectorAll('option');
            if (options.length > 1) { // Skip if already populated
                return;
            }
            // Add options for staff members
            var staffNames = ["John Doe", "Jane Smith", "Michael Johnson"]; // Example staff names
            staffNames.forEach(function (name, index) {
                var option = document.createElement('option');
                option.value = index + 1; // Example staff ID
                option.text = name;
                select.appendChild(option);
            });
        });

        document.getElementById('autofill-message').innerText = "Form autofilled successfully.";
    }
    var materialCounter = 1; // Initialize counters
    var labourCounter = 1;
    var staffCounter = 1;

    function addMaterial() {
        var materialTableBody = document.querySelector("#material-fields tbody");
        var newRow = materialTableBody.insertRow();
        newRow.innerHTML = `
                    <tr>
                        <td>
                            <select class="form-control" name="materials[${materialCounter}].MaterialType" required>
                                <option value="">Select Material Type</option>
    @foreach (var materialType in ViewBag.MaterialTypes)
    {
                                        <option value="@materialType.Value">@materialType.Text</option>
    }
                            </select>
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[${materialCounter}].MaterialQuantity" placeholder="Quantity" required />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[${materialCounter}].MaterialDescription" placeholder="Description" required />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[${materialCounter}].MaterialSize" placeholder="Size" required />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[${materialCounter}].MaterialPrice" placeholder="Price" required />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="removeTableRow(this)">Remove</button>
                        </td>
                    </tr>
                `;
        materialCounter++;
    }

    function addLabour() {
        var labourTableBody = document.querySelector("#labour-fields tbody");
        var newRow = labourTableBody.insertRow();
        newRow.innerHTML = `
                    <tr>
                        <td>
                            <input type="text" class="form-control" name="Labours[${labourCounter}].LabourHours" placeholder="Hours worked" required />
                        </td>
                        <td>
                            <select class="form-control" name="labours[${labourCounter}].LabourDescription" required>
                                <option value="">Select Labour Description</option>
    @foreach (var labourDescription in ViewBag.LabourDescriptions)
    {
                                        <option value="@labourDescription">@labourDescription</option>
    }
                            </select>
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Labours[${labourCounter}].LabourPrice" placeholder="Price" required />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="removeTableRow(this)">Remove</button>
                        </td>
                    </tr>
                `;
        labourCounter++;
    }

    function removeTableRow(button) {
        // Find the row where the button is located and remove it
        button.closest("tr").remove();
    }

    function addStaff() {
        var staffContainer = document.getElementById('staffContainer');

        // Create a new set of elements for staff selection
        var newStaffFields = document.createElement('div');
        newStaffFields.classList.add('staffFields');
        newStaffFields.innerHTML = `
                <label asp-for="Staff" class="control-label">Staff<span class="text-danger">*</span></label>
                <select asp-for="Staff" class="form-control" asp-items="ViewBag.StaffID" name="StaffIDList">
                    <option value="">Select Staff</option>
                </select>
                <button type="button" class="btn btn-danger" onclick="removeElement(this)">Remove</button>
            `;

        staffContainer.appendChild(newStaffFields);
        staffCounter++; // Increment the staff counter

        // Initialize Select2 for the newly added staff dropdown
        var newStaffSelect = newStaffFields.querySelector('select');
        $(newStaffSelect).select2({
            placeholder: "Select Staff",
            allowClear: true
        });

        // Populate the new staff dropdown with existing staff options
        var existingStaffOptions = document.querySelectorAll('select[name^="Staff"] option:not([value=""])');
        existingStaffOptions.forEach(function (option) {
            var newOption = document.createElement('option');
            newOption.value = option.value;
            newOption.text = option.text;
            newStaffSelect.appendChild(newOption);
        });
    }

    function removeElement(button) {
        // Find the parent div with class 'staffFields' and remove it
        button.closest('.staffFields').remove();
    }

    // Event listener for the remove button inside staffFields div
    document.querySelectorAll('.staffFields .btn-danger').forEach(function (button) {
        button.addEventListener('click', function () {
            removeElement(this);
        });
    });

    // Event listener for the addStaffBtn button
    document.getElementById('addStaffBtn').addEventListener('click', addStaff);
</script>