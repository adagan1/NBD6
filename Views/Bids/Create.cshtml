@model NBD6.Models.Bid

@{
    ViewData["Title"] = "Create";
}

<h1>Bid Create</h1>

<p>All fields marked with * are required to create a bid.</p>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="col-md-6">
            <!-- Bid Fields -->
            <h4>Bid</h4>
            <hr />
            <div class="form-group">
                <label asp-for="BidName" class="control-label">Bid Name<span class="text-danger">*</span></label>
                <input asp-for="BidName" class="form-control" placeholder="Enter bid name" required />
                <span asp-validation-for="BidName" class="text-danger"></span>
            </div>
            <!-- Adjusted to use date input type -->
            <div class="form-group">
                <label asp-for="BidStart" class="control-label">Bid Start Date<span class="text-danger">*</span></label>
                <input asp-for="BidStart" class="form-control" type="date" required />
                <span asp-validation-for="BidStart" class="text-danger"></span>
            </div>
            <!-- Adjusted to use date input type -->
            <div class="form-group">
                <label asp-for="BidEnd" class="control-label">Bid End Date<span class="text-danger">*</span></label>
                <input asp-for="BidEnd" class="form-control" type="date" required />
                <span asp-validation-for="BidEnd" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProjectID" class="control-label">Project<span class="text-danger">*</span></label>
                <select asp-for="ProjectID" class="form-control" required>
                    <option value="">Select a Project</option>
                    @foreach (var project in ViewBag.Projects)
                    {
                        <option value="@project.ProjectID">@project.ProjectName</option>
                    }
                </select>
                <a class="btn btn-primary mt-2" asp-area="" asp-controller="Projects" asp-action="Create">Create a new Project</a>
            </div>
        </div>

        <!-- Labour Fields -->
        <div class="col-md-6">
            <!-- Adjusted to use form-group for better styling -->
            <h4>Labour</h4>
            <hr />
            @for (var i = 0; i < Model.Labours.Count; i++)
            {
                <div class="form-group">
                    <label asp-for="@Model.Labours[i].LabourHours" class="control-label">Labour Hours<span class="text-danger">*</span></label>
                    <input asp-for="@Model.Labours[i].LabourHours" class="form-control" placeholder="Please enter the number of hours worked" required />
                    <span asp-validation-for="@Model.Labours[i].LabourHours" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Labours[i].LabourDescription" class="control-label">Description<span class="text-danger">*</span></label>
                    <input asp-for="@Model.Labours[i].LabourDescription" class="form-control" placeholder="Enter the type of labour conducted" required />
                    <span asp-validation-for="@Model.Labours[i].LabourDescription" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Labours[i].LabourPrice" class="control-label">Labour Price<span class="text-danger">*</span></label>
                    <input asp-for="@Model.Labours[i].LabourPrice" class="form-control" placeholder="ex: 100" required />
                    <span asp-validation-for="@Model.Labours[i].LabourPrice" class="text-danger"></span>
                </div>
            }
        </div>

        <!-- Material Fields -->
        <div class="col-md-6">
            <!-- Adjusted to use form-group for better styling -->
            <h4>Materials</h4>
            <hr />
            @for (var i = 0; i < Model.Materials.Count; i++)
            {
                <div class="form-group">
                    <label asp-for="@Model.Materials[i].MaterialType" class="control-label">Material Type<span class="text-danger">*</span></label>
                    <input asp-for="@Model.Materials[i].MaterialType" class="form-control" placeholder="ex: soil, bark, roses" required />
                    <span asp-validation-for="@Model.Materials[i].MaterialType" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Materials[i].MaterialQuantity" class="control-label">Quantity<span class="text-danger">*</span></label>
                    <input asp-for="@Model.Materials[i].MaterialQuantity" class="form-control" placeholder="ex: 10" required />
                    <span asp-validation-for="@Model.Materials[i].MaterialQuantity" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Materials[i].MaterialDescription" class="control-label">Description<span class="text-danger">*</span></label>
                    <input asp-for="@Model.Materials[i].MaterialDescription" class="form-control" required />
                    <span asp-validation-for="@Model.Materials[i].MaterialDescription" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Materials[i].MaterialSize" class="control-label">Materials Size<span class="text-danger">*</span></label>
                    <input asp-for="@Model.Materials[i].MaterialSize" class="form-control" placeholder="ex: 10 kg" required />
                    <span asp-validation-for="@Model.Materials[i].MaterialSize" class="text-danger"></span>
                    <small class="form-text text-muted">Please enter a unit of measurement after a digit(cm, m, l, g, kg)</small>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Materials[i].MaterialPrice" class="control-label">Price<span class="text-danger">*</span></label>
                    <input asp-for="@Model.Materials[i].MaterialPrice" class="form-control" required />
                    <span asp-validation-for="@Model.Materials[i].MaterialPrice" class="text-danger"></span>
                </div>
            }
        </div>
    </div>

    <!-- Autofill button -->
    <div class="form-group">
        <input type="submit" value="Create" class="btn btn-primary" />
        <button type="button" class="btn btn-secondary" onclick="autofill()">Autofill Form</button>
        <span id="autofill-message" class="text-success"></span>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    function autofill() {
        // Generate random data for Labour fields
        var labourCount = @Model.Labours.Count;
        for (var i = 0; i < labourCount; i++) {
            document.getElementById("Labours[" + i + "].LabourHours").value = Math.floor(Math.random() * 40) + 1; // Random value between 1 and 40
            document.getElementById("Labours[" + i + "].LabourDescription").value = generateRandomLabourDescription();
            document.getElementById("Labours[" + i + "].LabourPrice").value = (Math.random() * 100).toFixed(2); // Random value between 0 and 100, rounded to 2 decimal places
        }

        // Generate random data for Material fields
        var materialCount = @Model.Materials.Count;
        for (var i = 0; i < materialCount; i++) {
            document.getElementById("Materials[" + i + "].MaterialType").value = generateRandomMaterialType();
            document.getElementById("Materials[" + i + "].MaterialQuantity").value = Math.floor(Math.random() * 1000) + 1; // Random value between 1 and 1000
            var materialSize = (Math.random() * 100).toFixed(2); // Random value between 0 and 100, rounded to 2 decimal places
            var sizeUnit = Math.random() < 0.5 ? 'kg' : 'g'; // Randomly choose between kg and g
            document.getElementById("Materials[" + i + "].MaterialSize").value = materialSize + ' ' + sizeUnit; // Concatenate size with unit
            document.getElementById("Materials[" + i + "].MaterialDescription").value = generateRandomMaterialDescription();
            document.getElementById("Materials[" + i + "].MaterialPrice").value = (Math.random() * 100).toFixed(2); // Random value between 0 and 100, rounded to 2 decimal places
        }

        // Display autofill message
        document.getElementById("autofill-message").innerText = "Form autofilled successfully.";
    }

    // Function to generate random material type
    function generateRandomMaterialType() {
        var types = ['Concrete', 'Steel', 'Wood', 'Plastic', 'Glass', 'Aluminum', 'Copper'];
        return types[Math.floor(Math.random() * types.length)];
    }

    // Function to generate random material description
    function generateRandomMaterialDescription() {
        var descriptions = ['High quality', 'Durable', 'Eco friendly', 'Lightweight', 'Corrosion resistant', 'Fire resistant', 'Insulating'];
        return descriptions[Math.floor(Math.random() * descriptions.length)] + ' services';
    }

    // Function to generate random labour description
    function generateRandomLabourDescription() {
        var tasks = ['Excavation', 'Welding', 'Carpentry', 'Painting', 'Plumbing', 'Electrical wiring', 'Bricklaying'];
        return tasks[Math.floor(Math.random() * tasks.length)] + ' services';
    }
</script>