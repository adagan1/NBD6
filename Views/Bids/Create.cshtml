@model NBD6.Models.Bid

@{
    ViewData["Title"] = "Create";
}

<h1>Bid Create</h1>

<p>All fields marked with * are required to create a bid.</p>

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="row">
        <div class="col-md-6">
            <!-- Bid Name and Project Fields -->
            <h4>Bid</h4>
            <hr />
            <div class="form-group">
                <label asp-for="BidName" class="control-label">Bid Name<span class="text-danger">*</span></label>
                <input asp-for="BidName" class="form-control" placeholder="Enter bid name" required />
                <span asp-validation-for="BidName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ProjectID" class="control-label">Project<span class="text-danger">*</span></label>
                <select asp-for="ProjectID" class="form-control" asp-items="ViewBag.ProjectID">
                    <option value="">Select a Project</option>
                    @if (TempData["NewProjectID"] != null)
                    {
                        <option value="@TempData["NewProjectID"]" selected>@TempData["NewProjectSummary"]</option>
                    }
                </select>
                <a class="nav-link text-dark" asp-area="" asp-controller="Projects" asp-action="Create">Create a new Project</a>
            </div>
        </div>

        <div class="col-md-6">
            <h4 style="visibility: hidden;">Bid</h4>
            <div class="form-group" style="margin-top: 32px;">
                <label asp-for="BidStart" class="control-label">Bid Start Date<span class="text-danger">*</span></label>
                <input asp-for="BidStart" class="form-control" type="date" required />
                <span asp-validation-for="BidStart" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BidEnd" class="control-label">Bid End Date<span class="text-danger">*</span></label>
                <input asp-for="BidEnd" class="form-control" type="date" required />
                <span asp-validation-for="BidEnd" the="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="col-md-12">
        <!-- Labour Fields Table -->
        <div id="labour-fields">
            <h4>Labour</h4>
            <hr />
            <table class="table">
                <thead>
                    <tr>
                        <th>Labour Hours<span class="text-danger">*</span></th>
                        <th>Labour Description<span class="text-danger">*</span></th>
                        <th>Labour Price<span class="text-danger">*</span></th>
                    </tr>
                </thead>
                <tbody class="labour-group">
                    <tr>
                        <td>
                            <input type="text" class="form-control" name="Labours[0].LabourHours" placeholder="Hours worked" required />
                        </td>
                        <td>
                            <select class="form-control labour-description" name="Labours[0].LabourDescription" required onchange="setLabourPrice(this)">
                                <option value="">Select Labour</option>
                                <option data-price="30" value="Production Worker">Production Worker</option>
                                <option data-price="65" value="Designer">Designer</option>
                                <option data-price="55" value="Equipment Operator">Equipment Operator</option>
                                <option data-price="75" value="Botanist">Botanist</option>
                            </select>

                        </td>
                        <td>
                            <input type="text" class="form-control labour-price" name="Labours[0].LabourPrice" placeholder="Price" required readonly />
                        </td>
                    </tr>
                </tbody>
            </table>
            <button type="button" class="btn btn-success" onclick="addLabour()">Add Another Labour</button>
        </div>

        <div style="height: 20px;"></div>
        <!-- Material Fields Table -->
        <div id="material-fields" class="container mt-5">
            <h4>Material</h4>
            <hr />
            <table class="table">
                <thead>
                    <tr>
                        <th>Material Type<span class="text-danger">*</span></th>
                        <th>Material Description<span class="text-danger">*</span></th>
                        <th>Material Quantity<span class="text-danger">*</span></th>
                        <th>Material Size<span class="text-danger">*</span></th>
                        <th>Material Price<span class="text-danger">*</span></th>
                    </tr>
                </thead>
                <tbody class="material-group">
                    <tr>
                        <td>
                            <select class="form-control material-type" name="Materials[0].MaterialType" onchange="updateMaterialDescriptionOptions(this)" required>
                                <option value="">Select Material Type</option>
                                <option value="Plants">Plants</option>
                                <option value="Pottery">Pottery</option>
                                <option value="Materials">Materials</option>
                            </select>
                        </td>
                        <td>
                            <select class="form-control material-description" name="Materials[0].MaterialDescription" onchange="setMaterialPrice(this)" required>
                                <option value="">Please select Material Type first</option>
                            </select>
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[0].MaterialQuantity" placeholder="Quantity" required />
                        </td>
                        <td>
                            <input type="text" class="form-control" name="Materials[0].MaterialSize" placeholder="Size" required readonly />
                            
                        </td>
                        <td>
                            <input type="text" class="form-control material-price" name="Materials[0].MaterialPrice" placeholder="Price" required readonly />
                        </td>
                    </tr>
                </tbody>
            </table>
            <button type="button" class="btn btn-success" onclick="addMaterial()">Add Another Material</button>
        </div>



        <div class="col-md-6">
            <h4>Staff</h4>
            <hr />
            <div class="row">
                <div class="col-md-9">
                    <div id="staffContainer">
                        <div class="staffFields">
                            <label asp-for="Staff" class="control-label">Staff<span class="text-danger">*</span></label>
                            <select asp-for="Staff" class="form-control" asp-items="ViewBag.StaffID" name="StaffIDList">
                                <option value="">Select Staff</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <button type="button" id="addStaffBtn" class="btn btn-primary" style="margin-top: 20px; padding: 6px 12px; font-size: 14px; line-height: 1.5;">Add More Staff</button>
                </div>
            </div>
        </div>

        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-success" style="margin-top: 10px;" />
            <button type="button" class="btn btn-info" style="margin-top: 10px;" onclick="autofill()">Autofill Form</button>
            <span id="autofill-message" class="text-success"></span>
        </div>
</form>

<div class="col-md-1">
    <div>
        <a class="nav-link text-dark" href="javascript:history.back()">Go Back</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <!-- Only include the Select2 CSS and JS once, and use jQuery 3.6.0 as it's more recent -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

        <script>
            $(document).ready(function () {
                $('#ProjectID').select2({
                    placeholder: "Select a Project",
                    allowClear: true
                });

                $('[name="StaffIDList"]').select2({
                    placeholder: "Select Staff",
                    allowClear: true
                });
            });
        
            function autofill() {
                // Predefined random values for various fields
                var bidNames = ["Garden Renovation", "Landscaping Project", "Park Enhancement", "Outdoor Design", "Green Space Development"];
                var randomBidName = bidNames[Math.floor(Math.random() * bidNames.length)];
                document.querySelector('input[name="BidName"]').value = randomBidName;

                // Generate random dates for the bid period
                var startDate = new Date(+(new Date()) - Math.floor(Math.random() * 10000000000));
                var endDate = new Date(startDate.getTime() + Math.floor(Math.random() * 1000000000));
                document.querySelector('input[name="BidStart"]').valueAsDate = startDate;
                document.querySelector('input[name="BidEnd"]').valueAsDate = endDate;

                // Autofill projects, labour, materials, and staff
                autofillDropdowns();
                autofillTextFields();

                // Set a message to indicate successful autofill
                document.getElementById('autofill-message').innerText = "Form autofilled successfully with random values.";
            }

            function autofillDropdowns() {
                // Function to autofill dropdowns and trigger change events to update dependent fields
                document.querySelectorAll('select').forEach(dropdown => {
                    var options = dropdown.querySelectorAll('option');
                    if (options.length > 1) {
                        var randomIndex = Math.floor(Math.random() * (options.length - 1)) + 1;
                        dropdown.value = options[randomIndex].value;

                        var event = new Event('change');
                        dropdown.dispatchEvent(event);
                    }
                });
            }

            function autofillTextFields() {
                // Function to autofill text fields for quantities, sizes, and other inputs
                var units = ["cm", "in", "gal", "yd"]; 
                document.querySelectorAll('input[type="text"]').forEach(input => {
                    if (input.name.includes("MaterialQuantity") || input.name.includes("LabourHours")) {
                        input.value = Math.floor(Math.random() * 100) + 1;
                    } else if (input.name.includes("MaterialSize")) {
                        var randomUnit = units[Math.floor(Math.random() * units.length)]; 
                        input.value = (Math.floor(Math.random() * 100) + 1) + " " + randomUnit;
                    }
                });
            }

    var materialCounter = 1;
    var labourCounter = 1;
    var staffCounter = 1;

    function removeTableRow(button) {
        button.closest("tr").remove();
    }

    function addStaff() {
        var staffContainer = document.getElementById('staffContainer');

        // Create a new set of elements for staff selection
        var newStaffFields = document.createElement('div');
        newStaffFields.classList.add('staffFields');
        newStaffFields.innerHTML = `
                            <label asp-for="Staff" class="control-label">Staff<span class="text-danger">*</span></label>
                            <select asp-for="Staff" class="form-control" asp-items="ViewBag.StaffID" name="StaffIDList">
                                <option value="">Select Staff</option>
                            </select>
                            <button type="button" class="btn btn-danger" onclick="removeElement(this)">Remove</button>
                        `;

        staffContainer.appendChild(newStaffFields);
        staffCounter++;

        var newStaffSelect = newStaffFields.querySelector('select');
        $(newStaffSelect).select2({
            placeholder: "Select Staff",
            allowClear: true
        });

        // Populate the new staff dropdown with existing staff options
        var existingStaffOptions = document.querySelectorAll('select[name^="Staff"] option:not([value=""])');
        existingStaffOptions.forEach(function (option) {
            var newOption = document.createElement('option');
            newOption.value = option.value;
            newOption.text = option.text;
            newStaffSelect.appendChild(newOption);
        });
    }

    function removeElement(button) {
        button.closest('.staffFields').remove();
    }

    // Event listener for the remove button inside staffFields div
    document.querySelectorAll('.staffFields .btn-danger').forEach(function (button) {
        button.addEventListener('click', function () {
            removeElement(this);
        });
    });

    document.getElementById('addStaffBtn').addEventListener('click', addStaff);


    function setLabourPrice(selectElement) {
        var price = selectElement.options[selectElement.selectedIndex].getAttribute('data-price');
        var priceInput = selectElement.closest('tr').querySelector('.labour-price');
        priceInput.value = price;
    }

    function addLabour() {
        var labourTableBody = document.querySelector("#labour-fields tbody");
        var newRow = labourTableBody.insertRow();
        var newIndex = document.querySelectorAll(".labour-group tr").length - 1;
        newRow.innerHTML = `
                                <tr>
                                    <td>
                                        <input type="text" class="form-control" name="Labours[${newIndex}].LabourHours" placeholder="Hours worked" required />
                                    </td>
                                    <td>
                                        <select class="form-control labour-description" name="Labours[${newIndex}].LabourDescription" required onchange="setLabourPrice(this)">
                                            <option value="">Select Labour </option>
                                            <option data-price="30" value="Production Worker">Production Worker</option>
                                            <option data-price="65" value="Designer">Designer</option>
                                            <option data-price="55" value="Equipment Operator">Equipment Operator</option>
                                            <option data-price="75" value="Botanist">Botanist</option>
                                        </select>
                                    </td>
                                    <td>
                                        <input type="text" class="form-control labour-price" name="Labours[${newIndex}].LabourPrice" placeholder="Price" required readonly />
                                    </td>
                                    <td>
                                        <button type="button" class="btn btn-danger" onclick="removeLabourRow(this)">Remove</button>
                                    </td>
                                </tr>
                            `;
    }

    function updateMaterialDescriptionOptions(materialTypeSelect) {
        var materialDescriptionSelect = materialTypeSelect.closest('tr').querySelector('.material-description');
        var materialType = materialTypeSelect.value;
        var options = [];

        switch (materialType) {
            case "Plants":
                options = [
                    { text: "Please select a Plant", value: "", price: "0" },
                    { text: "Rose", value: "Rose", price: "5" },
                    { text: "Tulip", value: "Tulip", price: "3" },
                    { text: "Lavender", value: "Lavender", price: "4" },
                    { text: "Orchid", value: "Orchid", price: "7" },
                    { text: "Sunflower", value: "Sunflower", price: "2" }
                ];
                break;
            case "Pottery":
                options = [
                            { text: "Please select a Pottery", value: "", price: "0" },
                    { text: "Granite Fountain", value: "Granite Fountain", price: "200" },
                    { text: "Granite Pots", value: "Granite Pots", price: "50" },
                    { text: "Clay Vase", value: "Clay Vase", price: "20" },
                    { text: "Porcelain Bowl", value: "Porcelain Bowl", price: "30" },
                    { text: "Terracotta Planter", value: "Terracotta Planter", price: "25" }
                ];
                break;
            case "Materials":
                options = [
                    { text: "Please select a Material", value: "", price: "0" },
                    { text: "Decorative Cedar Bark", value: "Decorative Cedar Bark", price: "15" },
                    { text: "Top Soil", value: "Top Soil", price: "10" },
                    { text: "Mulch", value: "Mulch", price: "8" },
                    { text: "Peat Moss", value: "Peat Moss", price: "12" },
                    { text: "River Stones", value: "River Stones", price: "20" }
                ];
                break;
            default:
                options = [{ text: "Please select Material Type first", value: "", price: "0" }];
                break;
        }

        // Clear existing options
        materialDescriptionSelect.innerHTML = '';

        // Populate with new options
        options.forEach(function (option) {
            var newOption = new Option(option.text, option.value);
            newOption.dataset.price = option.price;
            materialDescriptionSelect.appendChild(newOption);
        });
    }

    function setMaterialPrice(materialDescriptionSelect) {
        var priceInput = materialDescriptionSelect.closest('tr').querySelector('.material-price');
        var selectedOption = materialDescriptionSelect.options[materialDescriptionSelect.selectedIndex];

        if (selectedOption && selectedOption.dataset.price) {
            priceInput.value = selectedOption.dataset.price;
        } else {
            priceInput.value = '';
        }
    }

    function addMaterial() {
        var materialTableBody = document.querySelector("#material-fields tbody");
        var index = materialTableBody.querySelectorAll("tr").length;
        var newRow = materialTableBody.insertRow(-1);
        newRow.innerHTML = `
                        <tr>
                            <td>
                                <select class="form-control material-type" name="Materials[${index}].MaterialType" onchange="updateMaterialDescriptionOptions(this)" required>
                                    <option value="">Select Material Type</option>
                                    <option value="Plants">Plants</option>
                                    <option value="Pottery">Pottery</option>
                                    <option value="Materials">Materials</option>
                                </select>
                            </td>
                            <td>
                                <select class="form-control material-description" name="Materials[${index}].MaterialDescription" onchange="setMaterialPrice(this)" required>
                                    <option value="">Please select Material Type first</option>
                                </select>
                            </td>
                            <td>
                                <input type="text" class="form-control" name="Materials[${index}].MaterialQuantity" placeholder="Quantity" required />
                            </td>
                            <td>
                                <input type="text" class="form-control" name="Materials[${index}].MaterialSize" placeholder="Size" required />
                            </td>
                            <td>
                                <input type="text" class="form-control material-price" name="Materials[${index}].MaterialPrice" placeholder="Price" required readonly />
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger" onclick="removeTableRow(this)">Remove</button>
                            </td>
                        </tr>
                    `;
    }

            function setMaterialPrice(materialDescriptionSelect) {
                var priceInput = materialDescriptionSelect.closest('tr').querySelector('.material-price');
                var materialSizeInput = materialDescriptionSelect.closest('tr').querySelector('input[name$=".MaterialSize"]');
                var selectedOption = materialDescriptionSelect.options[materialDescriptionSelect.selectedIndex];
                var materialType = materialDescriptionSelect.closest('tr').querySelector('.material-type').value;
                var options = [];

                switch (materialType) {
                    case "Plants":
                        options = [
                            { text: "Rose", value: "Rose", price: "5", size: "5 gal" },
                            { text: "Tulip", value: "Tulip", price: "3", size: "3 gal" },
                            { text: "Lavender", value: "Lavender", price: "4", size: "4 gal" },
                            { text: "Orchid", value: "Orchid", price: "7", size: "6 gal" },
                            { text: "Sunflower", value: "Sunflower", price: "2", size: "2 gal" }
                        ];
                        break;
                    case "Pottery":
                        options = [
                            { text: "Granite Fountain", value: "Granite Fountain", price: "200", size: "36 in" },
                            { text: "Granite Pots", value: "Granite Pots", price: "50", size: "18 in" },
                            { text: "Clay Vase", value: "Clay Vase", price: "20", size: "12 in" },
                            { text: "Porcelain Bowl", value: "Porcelain Bowl", price: "30", size: "12 in" },
                            { text: "Terracotta Planter", value: "Terracotta Planter", price: "25", size: "6 in" }
                        ];
                        break;
                    case "Materials":
                        options = [
                            { text: "Decorative Cedar Bark", value: "Decorative Cedar Bark", price: "15", size: "22 yd" },
                            { text: "Top Soil", value: "Top Soil", price: "10", size: "9 yd" },
                            { text: "Mulch", value: "Mulch", price: "8", size: "12 yd" },
                            { text: "Peat Moss", value: "Peat Moss", price: "12", size: "34 yd" },
                            { text: "River Stones", value: "River Stones", price: "20", size: "26 yd" }
                        ];
                        break;
                }

                if (selectedOption && selectedOption.dataset.price) {
                    priceInput.value = selectedOption.dataset.price;
                    var size = options.find(opt => opt.value === selectedOption.value).size;
                    materialSizeInput.value = size;
                } else {
                    priceInput.value = '';
                    materialSizeInput.value = '';
                }
            }

</script>
    }
}